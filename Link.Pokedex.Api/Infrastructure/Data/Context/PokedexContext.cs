// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Link.Pokedex.Api.Infrastructure.Data.Entities;
#nullable disable

namespace Link.Pokedex.Api.Infrastructure.Data.Context
{
    public partial class PokedexContext : DbContext
    {
        public PokedexContext()
        {
        }

        public PokedexContext(DbContextOptions<PokedexContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Pokemon> Pokemon { get; set; }
        public virtual DbSet<PokemonDebilidad> PokemonDebilidad { get; set; }
        public virtual DbSet<PokemonTipo> PokemonTipo { get; set; }
        public virtual DbSet<Tipo> Tipo { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<Pokemon>(entity =>
            {
                entity.HasKey(e => e.IdPokemon);

                entity.Property(e => e.Altura).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Habilidad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Imagen)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Peso).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PokemonDebilidad>(entity =>
            {
                entity.HasNoKey();

                entity.HasOne(d => d.IdPokemonNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdPokemon)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PokemonDebilidad_Pokemon");

                entity.HasOne(d => d.IdTipoDebilidadNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdTipoDebilidad)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PokemonDebilidad_Tipo");
            });

            modelBuilder.Entity<PokemonTipo>(entity =>
            {
                entity.HasNoKey();

                entity.HasOne(d => d.IdPokemonNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdPokemon)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PokemonTipo_Pokemon");

                entity.HasOne(d => d.IdTipoNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdTipo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PokemonTipo_Tipo");
            });

            modelBuilder.Entity<Tipo>(entity =>
            {
                entity.HasKey(e => e.IdTipo);

                entity.Property(e => e.ClaseColor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}